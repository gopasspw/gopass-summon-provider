on:
  release:
    types: [created]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            raw.githubusercontent.com:443
            storage.googleapis.com:443
            sum.golang.org:443
            golang.org:443
            go.dev:443
            azure.archive.ubuntu.com:443
            archive.ubuntu.com:443
            security.ubuntu.com:443

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "1.24"

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Ubuntu Dependencies
        run: sudo apt-get install --yes git gnupg

      - run: git config --global user.name nobody

      - run: git config --global user.email foo.bar@example.org

      - name: Debug
        run: |
          echo "Go env ------------------"
          pwd
          echo ${HOME}
          echo ${GITHUB_WORKSPACE}
          echo ${GOPATH}
          echo ${GOROOT}
          env

      - name: Build and Unit Test
        run: make gha-linux

      - name: Get version
        id: get-version
        run: |
          echo "VERSION=$(cat VERSION)" >> "$GITHUB_OUTPUT"

      - name: Compress binaries
        run: |
            tar -czf "gopass-summon-provider-${VERSION}-linux-amd64.tar.gz" gopass-summon-provider-linux-amd64
            tar -czf "gopass-summon-provider-${VERSION}-darwin-amd64.tar.gz" gopass-summon-provider-darwin-amd64
            tar -czf "gopass-summon-provider-${VERSION}-windows-amd64.tar.gz" gopass-summon-provider-windows-amd64
        env:
          VERSION: ${{ steps.get-version.outputs.VERSION }}

      - name: Upload assets
        run: |
          gh release upload ${{ github.event.release.tag_name }} --clobber \
            gopass-summon-provider-${VERSION}-linux-amd64.tar.gz \
            gopass-summon-provider-${VERSION}-darwin-amd64.tar.gz \
            gopass-summon-provider-${VERSION}-windows-amd64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.get-version.outputs.VERSION }}
            
